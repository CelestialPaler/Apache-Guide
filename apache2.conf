# OF:	This is the main Apache server configuration file.  It contains the
# 		configuration directives that give the server its instructions.
# 		See http://httpd.apache.org/docs/2.4/ for detailed information about
# 		the directives and /usr/share/doc/apache2/README.Debian about Debian specific
# 		hints.
#
#
# 		Summary of how the Apache 2 configuration works in Debian:
# 					The Apache 2 web server configuration in Debian is quite different to
# 		upstream's suggested way to configure the web server. This is because Debian's
# 		default Apache2 installation attempts to make adding and removing modules,
# 		virtual hosts, and extra configuration directives as flexible as possible, in
# 		order to make automating the changes and administering the server as easy as
# 		possible.

# 		It is split into several files forming the configuration hierarchy outlined
# 		below, all located in the /etc/apache2/ directory:
#
#			/etc/apache2/
#						|-- apache2.conf
#						|	`--  ports.conf
#						|-- mods-enabled
#						|	|-- *.load
#						|	`-- *.conf
#						|-- conf-enabled
#						|	`-- *.conf
# 						`-- sites-enabled
#							`-- *.conf

# CP : So apache.conf is the main configuration file to sum up all the other config files
#  		 which means that all the other .conf seperated in the subfolders will be invoked by
# 		 this file.
#      It's the top-layer file that affect the globle configuration.

# OF: * apache2.conf is the main configuration file (this file). It puts the pieces
#   		together by including all remaining configuration files when starting up the
#   		web server.
#
# 		* ports.conf is always included from the main configuration file. It is
#   		supposed to determine listening ports for incoming connections which can be
#   		customized anytime.
#
# 		* Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/
#   		directories contain particular configuration snippets which manage modules,
#   		global configuration fragments, or virtual host configurations,
#   		respectively.
#
#   		They are activated by symlinking available configuration files from their
#   		respective *-available/ counterparts. These should be managed by using our
#   		helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See
#   		their respective man pages for detailed information.
#
# 		* The binary is called apache2. Due to the use of environment variables, in
#   		the default configuration, apache2 needs to be started/stopped with
#   		/etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not
#   		work with the default configuration.


# OF: Global configuration
# 		ServerRoot: The top of the directory tree under which the server's
# 								configuration, error, and log files are kept.
#
# 		NOTE!  If you intend to place this on an NFS (or otherwise network)
# 					mounted filesystem then please read the Mutex documentation (available
# 					at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);
# 					you will save yourself a lot of trouble.
#
# 		Do NOT add a slash at the end of the directory path.
#
#			ServerRoot "/etc/apache2"

# CP: It's important to remeber that:
#						 DONT ADD '/' AT THE END OF DIRACTORY PATH!
#			And according to the offical documentation :
#						 DONT ADD '/' AT THE END OF DERACTIVES!
#   	Cause '/' means that the line is not long enough to write whole command so
#     use '/' to let computer know that there are still some command below,if you did
#			it will look for unexist command and raise errors.


# OF: The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
#	Mutex file:${APACHE_LOCK_DIR} default

# CP: Have no idea about what a serialization lock is.


# OF: The directory where shm and other runtime files will be stored.
# CP: Set the default runtinme
DefaultRuntimeDir ${APACHE_RUN_DIR}

# OF: PidFile: The file in which the server should record its process
# 						 identification number when it starts.
# 						 This needs to be set in /etc/apache2/envvars
# CP: "A Pid-File is a file containing the process identification number (pid)
#     that is stored in a well-defined location of the filesystem thus allowing
#     other programs to find out the pid of a running script" -Google
# 		So it means setting the pid file path of the system.
PidFile ${APACHE_PID_FILE}

# OF: Timeout: The number of seconds before receives and sends time out.
# CP: So it's milliseconds i guess
Timeout 300

# OF: KeepAlive: Whether or not to allow persistent connections (more than
# 		one request per connection). Set to "Off" to deactivate.
# CP: So what is a persistent connection:
# 			"HTTP persistent connection, also called HTTP keep-alive, or HTTP connection
#     reuse,is the idea of using a single TCP connection to send and receive multiple
# 		HTTP requests/responses" -Wiki
#  		So it means share a single TCP connection in a multiplexing way.This tech is
#			wide-used nowdays.
KeepAlive On

# OF: MaxKeepAliveRequests: The maximum number of requests to allow
# 		during a persistent connection. Set to 0 to allow an unlimited amount.
# 		We recommend you leave this number high, for maximum performance.
# CP: So it's the same idea above.
MaxKeepAliveRequests 100

# OF: KeepAliveTimeout: Number of seconds to wait for the next request from the
# 											same client on the same connection.
# CP: If time runs out, the crossbonding persistent connection will be kick out.
KeepAliveTimeout 5

# OF:	These need to be set in /etc/apache2/envvars
# CP: export APACHE_RUN_USER=www-data
#			export APACHE_RUN_GROUP=www-data
#			So basicly it is the username been used by apache when apache works
User ${APACHE_RUN_USER}
Group ${APACHE_RUN_GROUP}

# OF: HostnameLookups: Log the names of clients or just their IP addresses
# 					e.g., www.apache.org (on) or 204.62.129.132 (off).
# 			The default is off because it'd be overall better for the net if people
# 		had to knowingly turn this feature on, since enabling it means that
# 		each client request will result in AT LEAST one lookup request to the
# 		nameserver.
# CP: 	It means that clients can use their domainname to send request to
#			your server, and your server will lookup in the DNS by itself to figure
#    	out the ip address of the clients.So it's a waste of time and resource.
# 		It should be set 'Off' in the common situation.
HostnameLookups Off

# OF: ErrorLog: The location of the error log file.
# 			If you do not specify an ErrorLog directive within a <VirtualHost>
# 		container, error messages relating to that virtual host will be
# 		logged here.
#   		If you *do* define an error logfile for a <VirtualHost>
# 		container, that host's errors will be logged there and not here.
# CP: 	It means every time your server had some error occured, the error info
# 		(log) will be write into the DIRACTORY you defined below.
# 			If you are using some virtual hosts, you can decide which file do each
# 		virtual host save to.
ErrorLog ${APACHE_LOG_DIR}/error.log

# OF: LogLevel: Control the severity of messages logged to the error_log.
# 		Available values: trace8, ..., trace1, debug, info, notice, warn,
# 		error, crit, alert, emerg.
# 		It is also possible to configure the log level for particular modules, e.g.
# 		"LogLevel info ssl:warn"
# CP: the higher level will create less error.
LogLevel warn

# OF: Include module configuration:
# CP: Here is something critical:
#					Imnort other mods
IncludeOptional mods-enabled/*.load
IncludeOptional mods-enabled/*.conf

# OF: Include ports configuration:
# CP: Here is something critical:
#					Imnort ports config
# 				to choose which port should your server listening on
Include ports.conf

# OF: Sets the default security model of the Apache2 HTTPD server. It does
# 		not allow access to the root filesystem outside of /usr/share and /var/www.
# 		The former is used by web applications packaged in Debian,
# 		the latter may be used for local directories served by the web server. If
# 		your system is serving content from a sub-directory in /srv you must allow
# 		access here, or in any related virtual host.
# CP: Here is some settings about authority.
#			To define which directory can different client to visit.
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>

<Directory /usr/share>
	AllowOverride None
	Require all granted
</Directory>

<Directory /var/www/>
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
</Directory>

#<Directory /srv/>
#	Options Indexes FollowSymLinks
#	AllowOverride None
#	Require all granted
#</Directory>




# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>


#
# The following directives define some format nicknames for use with
# a CustomLog directive.
#
# These deviate from the Common Log Format definitions in that they use %O
# (the actual bytes sent including headers) instead of %b (the size of the
# requested file), because the latter makes it impossible to detect partial
# requests.
#
# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.
# Use mod_remoteip instead.
#
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Include of directories ignores editors' and dpkg's backup files,
# see README.Debian for details.

# Include generic snippets of statements
IncludeOptional conf-enabled/*.conf

# Include the virtual host configurations:
IncludeOptional sites-enabled/*.conf

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
